/* THIS IS THE TEMPLATE FOR Parser.jj and ParserAST.jj. PLEASE FILL IN AT LEAST
 * ALL INSTANCES OF THE COMMENT "FILLIN", AND REMOVE THIS HEADER COMMENT. */

options {
  JAVA_UNICODE_ESCAPE = true;
  STATIC = false;
}

PARSER_BEGIN(Parser)
    package edu.purdue.cs352.minijava.parser;

    public class Parser {
        public static void main(String[] args) {
            Parser parser;

            if (args.length != 1) {
                System.out.println("Use: mjparse <input file>");
                return;
            }

            try {
                parser = new Parser(new java.io.FileInputStream(args[0]));
            } catch (java.io.FileNotFoundException ex) {
                System.out.println("File " + args[0] + " not found.");
                return;
            }

            try {
                parser.Program();
            } catch (ParseException ex) {
                System.out.println(ex.getMessage());
                return;
            }
        }
    }
PARSER_END(Parser)

// Lexical definitions

// FILLIN: Insert your complete lexer here

// Grammar
void Program():
{
    // FILLIN: Variable declarations if needed (for ParserAST.jj only)
}
{
    // FILLIN
}

// FILLIN: Remainder of the grammar

void PrimaryExp():
{
    // FILLIN: Variable declarations if needed (for ParserAST.jj only)
}
{
    <INT_LITERAL>
|   // FILLIN: ...
}
